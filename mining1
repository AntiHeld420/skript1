-- Turtle Stripmine Pro v3 â€“ mit Erz-Whitelist und Scan

local whitelist = {
  ["minecraft:coal_ore"] = true,
  ["minecraft:iron_ore"] = true,
  ["minecraft:gold_ore"] = true,
  ["minecraft:diamond_ore"] = true,
  ["minecraft:emerald_ore"] = true,
  ["minecraft:redstone_ore"] = true,
  ["minecraft:copper_ore"] = true,
  ["minecraft:lapis_ore"] = true,
  ["minecraft:deepslate_coal_ore"] = true,
  ["minecraft:deepslate_iron_ore"] = true,
  ["minecraft:deepslate_gold_ore"] = true,
  ["minecraft:deepslate_diamond_ore"] = true,
  ["minecraft:deepslate_emerald_ore"] = true,
  ["minecraft:deepslate_redstone_ore"] = true,
  ["minecraft:deepslate_copper_ore"] = true,
  ["minecraft:deepslate_lapis_ore"] = true,
}

function refuel()
  if turtle.getFuelLevel() < 100 then
    for i = 1, 16 do
      turtle.select(i)
      if turtle.refuel(0) then
        turtle.refuel(1)
        break
      end
    end
  end
end

function digDownToY6()
  local _, y = gps.locate()
  while y and y > 6 do
    refuel()
    if turtle.detectDown() then turtle.digDown() end
    turtle.down()
    _, y = gps.locate()
  end
end

function tryDig(direction)
  local inspect, data
  if direction == "front" then
    inspect, data = turtle.inspect()
  elseif direction == "up" then
    inspect, data = turtle.inspectUp()
  elseif direction == "down" then
    inspect, data = turtle.inspectDown()
  end

  if inspect and data and whitelist[data.name] then
    if direction == "front" then turtle.dig()
    elseif direction == "up" then turtle.digUp()
    elseif direction == "down" then turtle.digDown()
    end
  end
end

function digAndScanForward()
  refuel()
  tryDig("front")
  tryDig("up")
  tryDig("down")
  turtle.forward()
end

function tunnel3x3x30()
  for i = 1, 30 do
    digAndScanForward()
    turtle.turnLeft()
    tryDig("front")
    turtle.turnRight()
    turtle.turnRight()
    tryDig("front")
    turtle.turnLeft()
  end
end

function stripMineGaenge(anzahl, abstand)
  for i = 1, anzahl do
    turtle.turnRight()
    for j = 1, 200 do
      digAndScanForward()
    end
    for j = 1, 200 do
      turtle.back()
    end
    turtle.turnLeft()
    for s = 1, abstand do
      turtle.forward()
    end
  end
end

function zurueckUndEntleeren()
  for i = 1, 30 do turtle.back() end
  for i = 1, 16 do
    turtle.select(i)
    turtle.drop()
  end
end

refuel()
digDownToY6()
tunnel3x3x30()
stripMineG=nge(5, 5)
zurueckUndEntleeren()
