local whitelist = {
  ["minecraft:coal_ore"] = true,
  ["minecraft:iron_ore"] = true,
  ["minecraft:gold_ore"] = true,
  ["minecraft:diamond_ore"] = true,
  ["minecraft:emerald_ore"] = true,
  ["minecraft:redstone_ore"] = true,
  ["minecraft:copper_ore"] = true,
  ["minecraft:lapis_ore"] = true,
  ["minecraft:deepslate_coal_ore"] = true,
  ["minecraft:deepslate_iron_ore"] = true,
  ["minecraft:deepslate_gold_ore"] = true,
  ["minecraft:deepslate_diamond_ore"] = true,
  ["minecraft:deepslate_emerald_ore"] = true,
  ["minecraft:deepslate_redstone_ore"] = true,
  ["minecraft:deepslate_copper_ore"] = true,
  ["minecraft:deepslate_lapis_ore"] = true,
}

function refuel()
  if turtle.getFuelLevel() < 100 then
    for i = 1, 16 do
      turtle.select(i)
      if turtle.refuel(0) then
        turtle.refuel(1)
        break
      end
    end
  end
end

function digDownToDepth()
  for i = 1, 50 do
    refuel()
    if turtle.detectDown() then
      turtle.digDown()
    end
    if not turtle.down() then
      break
    end
  end
end

function tryDig(direction)
  local success, data
  if direction == "front" then
    success, data = turtle.inspect()
  elseif direction == "up" then
    success, data = turtle.inspectUp()
  elseif direction == "down" then
    success, data = turtle.inspectDown()
  end

  if success and data and whitelist[data.name] then
    if direction == "front" then turtle.dig()
    elseif direction == "up" then turtle.digUp()
    elseif direction == "down" then turtle.digDown()
    end
  end
end

function digAndScanForward()
  refuel()
  tryDig("front")
  tryDig("up")
  tryDig("down")
  if not turtle.forward() then
    turtle.dig()
    turtle.forward()
  end
end

function tunnel3x3x30()
  for i = 1, 30 do
    digAndScanForward()
    turtle.turnLeft()
    tryDig("front")
    turtle.turnRight()
    turtle.turnRight()
    tryDig("front")
    turtle.turnLeft()
  end
end

function digStripmineGange(anzahl, abstand)
  for i = 1, anzahl do
    turtle.turnLeft()
    for j = 1, 200 do
      digAndScanForward()
    end
    for j = 1, 200 do
      turtle.back()
    end
    turtle.turnRight()
    for s = 1, abstand do
      digAndScanForward()
    end
  end
end

function returnToStart(dist)
  for i = 1, dist do
    turtle.back()
  end
end

function dropInventoryBack()
  turtle.turnLeft()
  turtle.turnLeft()
  for i = 1, 16 do
    turtle.select(i)
    turtle.drop()
  end
  turtle.turnLeft()
  turtle.turnLeft()
end

-- Ablauf starten
refuel()
digDownToDepth()
tunnel3x3x30()
digStripmineGange(6, 2)     -- 6 Strip-Gaenge, 2 Block Abstand, 200 lang
returnToStart(30)           -- 30 Blöcke zurück
dropInventoryBack()         -- Items in Truhe hinter Start entladen
