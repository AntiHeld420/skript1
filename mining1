-- Funktion: Sicher vorwaerts bewegen
function sicherVor()
    while not turtle.forward() do
        turtle.dig()
        sleep(0.5)
    end
end

-- Funktion: Sicher aufsteigen
function sicherHoch()
    while not turtle.up() do
        turtle.digUp()
        sleep(0.5)
    end
end

-- Funktion: Umdrehen (180 Grad)
function umdrehen()
    turtle.turnLeft()
    turtle.turnLeft()
end

-- Funktion: Blocke auffuellen aus Kiste hinter Startpunkt
function auffuellenAusKiste()
    print("Hole neue Blocke aus der Kiste...")

    -- Aktuelle Position speichern
    umdrehen()
    sicherVor()  -- Zur Kiste hinter Start

    -- Blocke aufnehmen (aus jedem Slot in der Kiste)
    for i = 1, 16 do
        turtle.select(i)
        turtle.suck()  -- Diese Funktion nimmt nur die Items aus der Kiste und baut sie nicht ab
    end

    -- Zurueck zur Arbeitsposition
    umdrehen()
    sicherVor()
    turtle.select(1) -- Zurueck zu Slot 1
end

-- Funktion: pruefen, ob noch Blocke vorhanden
function hatBlocke()
    for i = 1, 16 do
        if turtle.getItemCount(i) > 0 then
            return true
        end
    end
    return false
end

-- Funktion: versuche Block unter Turtle zu platzieren
function platzierenUnten()
    for i = 1, 16 do
        turtle.select(i)
        if turtle.getItemCount() > 0 then
            if turtle.placeDown() then
                return true
            end
        end
    end
    return false
end

-- Raumgröße festlegen (testweise auf 5 setzen)
local n = 5

print("Starte Fuellen von " .. n .. " x " .. n .. " x " .. n .. " Blocken.")

-- Hauptschleife: Ebene fuer Ebene
for ebene = 1, n do
    for reihe = 1, n do
        for spalte = 1, n do
            if not hatBlocke() then
                auffuellenAusKiste()
                if not hatBlocke() then
                    print("Keine Blocke mehr verfuegbar. Abbruch.")
                    return
                end
            end

            platzierenUnten()

            if spalte < n then
                sicherVor()
            end
        end

        -- Zeilenwechsel
        if reihe < n then
            if reihe % 2 == 1 then
                turtle.turnRight()
                sicherVor()
                turtle.turnRight()
            else
                turtle.turnLeft()
                sicherVor()
                turtle.turnLeft()
            end
        end
    end

    -- Wieder zum Start der Ebene
    if n % 2 == 1 then
        turtle.turnRight()
        for i = 1, n - 1 do sicherVor() end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, n - 1 do sicherVor() end
        turtle.turnLeft()
    end

    -- Naechste Ebene
    if ebene < n then
        sicherHoch()
