-- Funktion: Sicher vorwaerts bewegen, ohne Kisten abzubauen
function sicherVor()
    while true do
        -- Überprüfen, ob der Block vor der Turtle eine Kiste ist
        local success, block = turtle.inspect()  -- Prüft den Block vor der Turtle
        if not success or block.name ~= "minecraft:chest" then
            -- Wenn kein Kistenblock, dann vorwärts bewegen und graben (falls nötig)
            if not turtle.forward() then
                turtle.dig()  -- Grabe nur, wenn es nicht die Kiste ist
                sleep(0.5)
            end
            break  -- Verlasse die Schleife, sobald die Turtle erfolgreich vorwärts gegangen ist
        else
            -- Wenn eine Kiste vor der Turtle ist, einfach darüber hinweg gehen
            turtle.forward()
            break
        end
    end
end

-- Funktion: Sicher aufsteigen
function sicherHoch()
    while not turtle.up() do
        turtle.digUp()
        sleep(0.5)
    end
end

-- Funktion: Umdrehen (180 Grad)
function umdrehen()
    turtle.turnLeft()
    turtle.turnLeft()
end

-- Funktion: Blocke auffuellen aus Kiste hinter Startpunkt
function auffuellenAusKiste()
    print("Hole neue Blocke aus der Kiste...")

    -- Aktuelle Position speichern
    umdrehen()
    sicherVor()  -- Zur Kiste hinter Start

    -- Sicherstellen, dass wir Items aufnehmen, ohne die Kiste abzubauen
    for i = 1, 16 do
        turtle.select(i)
        turtle.suck()  -- Diese Funktion nimmt nur die Items aus der Kiste und baut sie nicht ab
    end

    -- Zurueck zur Arbeitsposition
    umdrehen()
    sicherVor()
    turtle.select(1) -- Zurueck zu Slot 1
end

-- Funktion: pruefen, ob noch Blocke vorhanden
function hatBlocke()
    for i = 1, 16 do
        if turtle.getItemCount(i) > 0 then
            return true
        end
    end
    return false
end

-- Funktion: versuche Block unter Turtle zu platzieren
function platzierenUnten()
    -- Sicherstellen, dass es einen Block zum Platzieren gibt
    for i = 1, 16 do
        turtle.select(i)  -- Wähle den Slot
        if turtle.getItemCount(i) > 0 then  -- Wenn der Slot nicht leer ist
            print("Versuche Block im Slot " .. i .. " zu platzieren...")
            local success = turtle.placeDown()  -- Versuche, den Block zu platzieren
            if success then
                print("Block erfolgreich platziert!")
                return true  -- Erfolgreich platziert
            else
                print("Fehler beim Platzieren des Blocks im Slot " .. i)
            end
        end
    end
    return false  -- Keine Blocke vorhanden
end

-- Raumgröße festlegen (testweise auf 5 setzen)
local n = 5

print("Starte Fuellen von " .. n .. " x " .. n .. " x " .. n .. " Blocken.")

-- Hauptschleife: Ebene fuer Ebene
for ebene = 1, n do
    -- Erste Schleife: Jede Reihe im Raum
    for reihe = 1, n do
        -- Zweite Schleife: Jede Spalte in der Reihe
        for spalte = 1, n do
            -- Falls keine Blocke mehr vorhanden sind, hole sie aus der Kiste
            if not hatBlocke() then
                auffuellenAusKiste()
                if not hatBlocke() then
                    print("Keine Blocke mehr verfuegbar. Abbruch.")
                    return
                end
            end

            -- Versuche, einen Block unter der Turtle zu platzieren
            if not platzierenUnten() then
                print("Fehler beim Platzieren des Blocks!")
                return  -- Wenn Platzierung nicht funktioniert, abbrechen
            end

            -- Vorwärts bewegen, wenn wir noch nicht am Ende der Spalte sind
            if spalte < n then
                sicherVor()
            end
        end -- Ende der zweiten Schleife (Spalten)

        -- Wechsel der Reihe
        if reihe < n then
            if reihe % 2 == 1 then
                turtle.turnRight()
                sicherVor()
                turtle.turnRight()
            else
                turtle.turnLeft()
                sicherVor()
                turtle.turnLeft()
            end
        end -- Ende der ersten Schleife (Reihen)
    end -- Ende der ersten Schleife (Reihen)

    -- Zurück zum Start der Ebene
    if n % 2 == 1 then
        turtle.turnRight()
        for i = 1, n - 1 do sicherVor() end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, n - 1 do sicherVor() end
        turtle.turnLeft()
    end

    -- Gehe zur nächsten Ebene, falls noch nicht fertig
    if ebene < n then
        sicherHoch()
    end
end -- Ende der Hauptschleife (Ebenen)

print("Fertig! Der Raum wurde vollstaendig gefuellt.")
